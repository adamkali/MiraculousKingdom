// tslint:disable
import { AxiosPromise } from "axios";
import { APIHandler, APIURLTypes, APIParams } from "../base";
import { CharDetialedResponse, VecCharDetailedResponse } from "../model";

export class ApicharacterApiApi extends APIHandler {
    static urls: APIURLTypes.ApicharacterApiApi = {
        getCharacterForGame: "/api/character/{secret}/{pass}",
        getCharacters: "/api/character/{secret}"
    };
    
    constructor() {
        super("ApicharacterApiApi");
    }
    
    /**
     * @param secret String set by the user to get their data
     * @param pass String generated by the api for the specific game.
     */
    public getCharacterForGame(params: APIParams & {
        secret: string;
        pass: string;
    }): AxiosPromise<CharDetialedResponse> {
        const apiURL: string = this.initAPIURL(ApicharacterApiApi.urls.getCharacterForGame, { secret: params.secret, pass: params.pass } );
        params.options = this.initOptions(params.options, {  }, {  }, params.canceler);
        const body: any = null;
        return this.makeCall<CharDetialedResponse>("GET".toLowerCase(), apiURL, "getCharacterForGame", params.options, body, "getCharacterForGame");
    }

    /**
     * Endpoint to find all characters that the players is participating in for their specific secret.
     * Endpoint to find all characters that the players is participating in for their specific secret.  # Example  &#x60;&#x60;&#x60; GET /api/character/{secret} &#x60;&#x60;&#x60;  # Parameters  - &#x60;secret&#x60;: String set by the user. Should keep the same. For now too lazy to fix ðŸ‘¿  # Responses  - &#x60;200 OK&#x60;: Found characters with secret_code: {secret}  &#x60;&#x60;&#x60;json { \&quot;code\&quot;: 200, \&quot;message\&quot;: \&quot;Found characters with secret_code: {secret}\&quot;, \&quot;success\&quot;: true, \&quot;data\&quot;: [ { \&quot;char_name\&quot;: \&quot;character_name\&quot;, ... }, ... ] } &#x60;&#x60;&#x60;  - &#x60;500 Internal Server Error&#x60;: An internal error occurred.  &#x60;&#x60;&#x60;json { \&quot;code\&quot;: 500, \&quot;success\&quot;: false \&quot;message\&quot;: \&quot;Internal error occurred\&quot;, \&quot;data\&quot;: [] } &#x60;&#x60;&#x60; 
     * @param secret String set by the user to get their data
     */
    public getCharacters(params: APIParams & {
        secret: string;
    }): AxiosPromise<VecCharDetailedResponse> {
        const apiURL: string = this.initAPIURL(ApicharacterApiApi.urls.getCharacters, { secret: params.secret } );
        params.options = this.initOptions(params.options, {  }, {  }, params.canceler);
        const body: any = null;
        return this.makeCall<VecCharDetailedResponse>("GET".toLowerCase(), apiURL, "getCharacters", params.options, body, "getCharacters");
    }

}
